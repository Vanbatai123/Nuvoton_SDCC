                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module include
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _xRamWrite_PARM_2
                                     12 	.globl _eiph1
                                     13 	.globl _eip1
                                     14 	.globl _pmd
                                     15 	.globl _pmen
                                     16 	.globl _pdtcnt
                                     17 	.globl _pdten
                                     18 	.globl _scon_1
                                     19 	.globl _eiph
                                     20 	.globl _aindids
                                     21 	.globl _spdr
                                     22 	.globl _spsr
                                     23 	.globl _spcr2
                                     24 	.globl _spcr
                                     25 	.globl _capcon4
                                     26 	.globl _capcon3
                                     27 	.globl _b
                                     28 	.globl _eip
                                     29 	.globl _c2h
                                     30 	.globl _c2l
                                     31 	.globl _pif
                                     32 	.globl _pipen
                                     33 	.globl _pinen
                                     34 	.globl _picon
                                     35 	.globl _adccon0
                                     36 	.globl _c1h
                                     37 	.globl _c1l
                                     38 	.globl _c0h
                                     39 	.globl _c0l
                                     40 	.globl _adcdly
                                     41 	.globl _adccon2
                                     42 	.globl _adccon1
                                     43 	.globl _acc
                                     44 	.globl _pwmcon1
                                     45 	.globl _piocon0
                                     46 	.globl _pwm3l
                                     47 	.globl _pwm2l
                                     48 	.globl _pwm1l
                                     49 	.globl _pwm0l
                                     50 	.globl _pwmpl
                                     51 	.globl _pwmcon0
                                     52 	.globl _fbd
                                     53 	.globl _pnp
                                     54 	.globl _pwm3h
                                     55 	.globl _pwm2h
                                     56 	.globl _pwm1h
                                     57 	.globl _pwm0h
                                     58 	.globl _pwmph
                                     59 	.globl _psw
                                     60 	.globl _adcmph
                                     61 	.globl _adcmpl
                                     62 	.globl _pwm5l
                                     63 	.globl _th2
                                     64 	.globl _pwm4l
                                     65 	.globl _tl2
                                     66 	.globl _rcmp2h
                                     67 	.globl _rcmp2l
                                     68 	.globl _t2mod
                                     69 	.globl _t2con
                                     70 	.globl _ta
                                     71 	.globl _piocon1
                                     72 	.globl _rh3
                                     73 	.globl _pwm5h
                                     74 	.globl _rl3
                                     75 	.globl _pwm4h
                                     76 	.globl _t3con
                                     77 	.globl _adcrh
                                     78 	.globl _adcrl
                                     79 	.globl _i2addr
                                     80 	.globl _i2con
                                     81 	.globl _i2toc
                                     82 	.globl _i2clk
                                     83 	.globl _i2stat
                                     84 	.globl _i2dat
                                     85 	.globl _saddr_1
                                     86 	.globl _saden_1
                                     87 	.globl _saden
                                     88 	.globl _ip
                                     89 	.globl _pwmintc
                                     90 	.globl _iph
                                     91 	.globl _p2s
                                     92 	.globl _p1sr
                                     93 	.globl _p1m2
                                     94 	.globl _p1s
                                     95 	.globl _p1m1
                                     96 	.globl _p0sr
                                     97 	.globl _p0m2
                                     98 	.globl _p0s
                                     99 	.globl _p0m1
                                    100 	.globl _p3
                                    101 	.globl _iapcn
                                    102 	.globl _iapfd
                                    103 	.globl _p3sr
                                    104 	.globl _p3m2
                                    105 	.globl _p3s
                                    106 	.globl _p3m1
                                    107 	.globl _bodcon1
                                    108 	.globl _wdcon
                                    109 	.globl _saddr
                                    110 	.globl _ie
                                    111 	.globl _iapah
                                    112 	.globl _iapal
                                    113 	.globl _iapuen
                                    114 	.globl _iaptrg
                                    115 	.globl _bodcon0
                                    116 	.globl _auxr1
                                    117 	.globl _p2
                                    118 	.globl _chpcon
                                    119 	.globl _eie1
                                    120 	.globl _eie
                                    121 	.globl _sbuf_1
                                    122 	.globl _sbuf
                                    123 	.globl _scon
                                    124 	.globl _cken
                                    125 	.globl _ckswt
                                    126 	.globl _ckdiv
                                    127 	.globl _capcon2
                                    128 	.globl _capcon1
                                    129 	.globl _capcon0
                                    130 	.globl _sfrs
                                    131 	.globl _p1
                                    132 	.globl _wkcon
                                    133 	.globl _ckcon
                                    134 	.globl _th1
                                    135 	.globl _th0
                                    136 	.globl _tl1
                                    137 	.globl _tl0
                                    138 	.globl _tmod
                                    139 	.globl _tcon
                                    140 	.globl _pcon
                                    141 	.globl _rwk
                                    142 	.globl _rctrim1
                                    143 	.globl _rctrim0
                                    144 	.globl _dph
                                    145 	.globl _dpl
                                    146 	.globl _sp
                                    147 	.globl _p0
                                    148 	.globl __delay_ms
                                    149 	.globl __delay_us
                                    150 	.globl _xRamRead
                                    151 	.globl _xRamWrite
                                    152 	.globl _xRamInc
                                    153 	.globl _xRamDec
                                    154 ;--------------------------------------------------------
                                    155 ; special function registers
                                    156 ;--------------------------------------------------------
                                    157 	.area RSEG    (ABS,DATA)
      000000                        158 	.org 0x0000
                           000080   159 _p0	=	0x0080
                           000081   160 _sp	=	0x0081
                           000082   161 _dpl	=	0x0082
                           000083   162 _dph	=	0x0083
                           000084   163 _rctrim0	=	0x0084
                           000085   164 _rctrim1	=	0x0085
                           000086   165 _rwk	=	0x0086
                           000087   166 _pcon	=	0x0087
                           000088   167 _tcon	=	0x0088
                           000089   168 _tmod	=	0x0089
                           00008A   169 _tl0	=	0x008a
                           00008B   170 _tl1	=	0x008b
                           00008C   171 _th0	=	0x008c
                           00008D   172 _th1	=	0x008d
                           00008E   173 _ckcon	=	0x008e
                           00008F   174 _wkcon	=	0x008f
                           000090   175 _p1	=	0x0090
                           000091   176 _sfrs	=	0x0091
                           000092   177 _capcon0	=	0x0092
                           000093   178 _capcon1	=	0x0093
                           000094   179 _capcon2	=	0x0094
                           000095   180 _ckdiv	=	0x0095
                           000096   181 _ckswt	=	0x0096
                           000097   182 _cken	=	0x0097
                           000098   183 _scon	=	0x0098
                           000099   184 _sbuf	=	0x0099
                           00009A   185 _sbuf_1	=	0x009a
                           00009B   186 _eie	=	0x009b
                           00009C   187 _eie1	=	0x009c
                           00009F   188 _chpcon	=	0x009f
                           0000A0   189 _p2	=	0x00a0
                           0000A2   190 _auxr1	=	0x00a2
                           0000A3   191 _bodcon0	=	0x00a3
                           0000A4   192 _iaptrg	=	0x00a4
                           0000A5   193 _iapuen	=	0x00a5
                           0000A6   194 _iapal	=	0x00a6
                           0000A7   195 _iapah	=	0x00a7
                           0000A8   196 _ie	=	0x00a8
                           0000A9   197 _saddr	=	0x00a9
                           0000AA   198 _wdcon	=	0x00aa
                           0000AB   199 _bodcon1	=	0x00ab
                           0000AC   200 _p3m1	=	0x00ac
                           0000AC   201 _p3s	=	0x00ac
                           0000AD   202 _p3m2	=	0x00ad
                           0000AD   203 _p3sr	=	0x00ad
                           0000AE   204 _iapfd	=	0x00ae
                           0000AF   205 _iapcn	=	0x00af
                           0000B0   206 _p3	=	0x00b0
                           0000B1   207 _p0m1	=	0x00b1
                           0000B1   208 _p0s	=	0x00b1
                           0000B2   209 _p0m2	=	0x00b2
                           0000B2   210 _p0sr	=	0x00b2
                           0000B3   211 _p1m1	=	0x00b3
                           0000B3   212 _p1s	=	0x00b3
                           0000B4   213 _p1m2	=	0x00b4
                           0000B4   214 _p1sr	=	0x00b4
                           0000B5   215 _p2s	=	0x00b5
                           0000B7   216 _iph	=	0x00b7
                           0000B7   217 _pwmintc	=	0x00b7
                           0000B8   218 _ip	=	0x00b8
                           0000B9   219 _saden	=	0x00b9
                           0000BA   220 _saden_1	=	0x00ba
                           0000BB   221 _saddr_1	=	0x00bb
                           0000BC   222 _i2dat	=	0x00bc
                           0000BD   223 _i2stat	=	0x00bd
                           0000BE   224 _i2clk	=	0x00be
                           0000BF   225 _i2toc	=	0x00bf
                           0000C0   226 _i2con	=	0x00c0
                           0000C1   227 _i2addr	=	0x00c1
                           0000C2   228 _adcrl	=	0x00c2
                           0000C3   229 _adcrh	=	0x00c3
                           0000C4   230 _t3con	=	0x00c4
                           0000C4   231 _pwm4h	=	0x00c4
                           0000C5   232 _rl3	=	0x00c5
                           0000C5   233 _pwm5h	=	0x00c5
                           0000C6   234 _rh3	=	0x00c6
                           0000C6   235 _piocon1	=	0x00c6
                           0000C7   236 _ta	=	0x00c7
                           0000C8   237 _t2con	=	0x00c8
                           0000C9   238 _t2mod	=	0x00c9
                           0000CA   239 _rcmp2l	=	0x00ca
                           0000CB   240 _rcmp2h	=	0x00cb
                           0000CC   241 _tl2	=	0x00cc
                           0000CC   242 _pwm4l	=	0x00cc
                           0000CD   243 _th2	=	0x00cd
                           0000CD   244 _pwm5l	=	0x00cd
                           0000CE   245 _adcmpl	=	0x00ce
                           0000CF   246 _adcmph	=	0x00cf
                           0000D0   247 _psw	=	0x00d0
                           0000D1   248 _pwmph	=	0x00d1
                           0000D2   249 _pwm0h	=	0x00d2
                           0000D3   250 _pwm1h	=	0x00d3
                           0000D4   251 _pwm2h	=	0x00d4
                           0000D5   252 _pwm3h	=	0x00d5
                           0000D6   253 _pnp	=	0x00d6
                           0000D7   254 _fbd	=	0x00d7
                           0000D8   255 _pwmcon0	=	0x00d8
                           0000D9   256 _pwmpl	=	0x00d9
                           0000DA   257 _pwm0l	=	0x00da
                           0000DB   258 _pwm1l	=	0x00db
                           0000DC   259 _pwm2l	=	0x00dc
                           0000DD   260 _pwm3l	=	0x00dd
                           0000DE   261 _piocon0	=	0x00de
                           0000DF   262 _pwmcon1	=	0x00df
                           0000E0   263 _acc	=	0x00e0
                           0000E1   264 _adccon1	=	0x00e1
                           0000E2   265 _adccon2	=	0x00e2
                           0000E3   266 _adcdly	=	0x00e3
                           0000E4   267 _c0l	=	0x00e4
                           0000E5   268 _c0h	=	0x00e5
                           0000E6   269 _c1l	=	0x00e6
                           0000E7   270 _c1h	=	0x00e7
                           0000E8   271 _adccon0	=	0x00e8
                           0000E9   272 _picon	=	0x00e9
                           0000EA   273 _pinen	=	0x00ea
                           0000EB   274 _pipen	=	0x00eb
                           0000EC   275 _pif	=	0x00ec
                           0000ED   276 _c2l	=	0x00ed
                           0000EE   277 _c2h	=	0x00ee
                           0000EF   278 _eip	=	0x00ef
                           0000F0   279 _b	=	0x00f0
                           0000F1   280 _capcon3	=	0x00f1
                           0000F2   281 _capcon4	=	0x00f2
                           0000F3   282 _spcr	=	0x00f3
                           0000F3   283 _spcr2	=	0x00f3
                           0000F4   284 _spsr	=	0x00f4
                           0000F5   285 _spdr	=	0x00f5
                           0000F6   286 _aindids	=	0x00f6
                           0000F7   287 _eiph	=	0x00f7
                           0000F8   288 _scon_1	=	0x00f8
                           0000F9   289 _pdten	=	0x00f9
                           0000FA   290 _pdtcnt	=	0x00fa
                           0000FB   291 _pmen	=	0x00fb
                           0000FC   292 _pmd	=	0x00fc
                           0000FE   293 _eip1	=	0x00fe
                           0000FF   294 _eiph1	=	0x00ff
                                    295 ;--------------------------------------------------------
                                    296 ; special function bits
                                    297 ;--------------------------------------------------------
                                    298 	.area RSEG    (ABS,DATA)
      000000                        299 	.org 0x0000
                                    300 ;--------------------------------------------------------
                                    301 ; overlayable register banks
                                    302 ;--------------------------------------------------------
                                    303 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        304 	.ds 8
                                    305 ;--------------------------------------------------------
                                    306 ; internal ram data
                                    307 ;--------------------------------------------------------
                                    308 	.area DSEG    (DATA)
                                    309 ;--------------------------------------------------------
                                    310 ; overlayable items in internal ram
                                    311 ;--------------------------------------------------------
                                    312 	.area	OSEG    (OVR,DATA)
                                    313 	.area	OSEG    (OVR,DATA)
                                    314 	.area	OSEG    (OVR,DATA)
      000000                        315 _xRamWrite_PARM_2:
      000000                        316 	.ds 1
                                    317 	.area	OSEG    (OVR,DATA)
                                    318 	.area	OSEG    (OVR,DATA)
                                    319 ;--------------------------------------------------------
                                    320 ; indirectly addressable internal ram data
                                    321 ;--------------------------------------------------------
                                    322 	.area ISEG    (DATA)
                                    323 ;--------------------------------------------------------
                                    324 ; absolute internal ram data
                                    325 ;--------------------------------------------------------
                                    326 	.area IABS    (ABS,DATA)
                                    327 	.area IABS    (ABS,DATA)
                                    328 ;--------------------------------------------------------
                                    329 ; bit data
                                    330 ;--------------------------------------------------------
                                    331 	.area BSEG    (BIT)
                                    332 ;--------------------------------------------------------
                                    333 ; paged external ram data
                                    334 ;--------------------------------------------------------
                                    335 	.area PSEG    (PAG,XDATA)
                                    336 ;--------------------------------------------------------
                                    337 ; external ram data
                                    338 ;--------------------------------------------------------
                                    339 	.area XSEG    (XDATA)
                                    340 ;--------------------------------------------------------
                                    341 ; absolute external ram data
                                    342 ;--------------------------------------------------------
                                    343 	.area XABS    (ABS,XDATA)
                                    344 ;--------------------------------------------------------
                                    345 ; external initialized ram data
                                    346 ;--------------------------------------------------------
                                    347 	.area XISEG   (XDATA)
                                    348 	.area HOME    (CODE)
                                    349 	.area GSINIT0 (CODE)
                                    350 	.area GSINIT1 (CODE)
                                    351 	.area GSINIT2 (CODE)
                                    352 	.area GSINIT3 (CODE)
                                    353 	.area GSINIT4 (CODE)
                                    354 	.area GSINIT5 (CODE)
                                    355 	.area GSINIT  (CODE)
                                    356 	.area GSFINAL (CODE)
                                    357 	.area CSEG    (CODE)
                                    358 ;--------------------------------------------------------
                                    359 ; global & static initialisations
                                    360 ;--------------------------------------------------------
                                    361 	.area HOME    (CODE)
                                    362 	.area GSINIT  (CODE)
                                    363 	.area GSFINAL (CODE)
                                    364 	.area GSINIT  (CODE)
                                    365 ;--------------------------------------------------------
                                    366 ; Home
                                    367 ;--------------------------------------------------------
                                    368 	.area HOME    (CODE)
                                    369 	.area HOME    (CODE)
                                    370 ;--------------------------------------------------------
                                    371 ; code
                                    372 ;--------------------------------------------------------
                                    373 	.area CSEG    (CODE)
                                    374 ;------------------------------------------------------------
                                    375 ;Allocation info for local variables in function '_delay_ms'
                                    376 ;------------------------------------------------------------
                                    377 ;__ms                      Allocated to registers r4 r5 r6 r7 
                                    378 ;------------------------------------------------------------
                                    379 ;	./src/include.c:10: void _delay_ms(uint32_t  __ms)
                                    380 ;	-----------------------------------------
                                    381 ;	 function _delay_ms
                                    382 ;	-----------------------------------------
      000000                        383 __delay_ms:
                           000007   384 	ar7 = 0x07
                           000006   385 	ar6 = 0x06
                           000005   386 	ar5 = 0x05
                           000004   387 	ar4 = 0x04
                           000003   388 	ar3 = 0x03
                           000002   389 	ar2 = 0x02
                           000001   390 	ar1 = 0x01
                           000000   391 	ar0 = 0x00
      000000 AC 82            [24]  392 	mov	r4,dpl
      000002 AD 83            [24]  393 	mov	r5,dph
      000004 AE F0            [24]  394 	mov	r6,b
      000006 FF               [12]  395 	mov	r7,a
                                    396 ;	./src/include.c:12: T3CON |= 0x07;                           		//Timer3 Clock = Fsys/128
      000007 43 C4 07         [24]  397 	orl	_t3con,#0x07
                                    398 ;	./src/include.c:13: setb(T3CON, TR3);                                		//Trigger Timer3 start run
      00000A 43 C4 08         [24]  399 	orl	_t3con,#0x08
                                    400 ;	./src/include.c:14: while (__ms != 0)
      00000D                        401 00104$:
      00000D EC               [12]  402 	mov	a,r4
      00000E 4D               [12]  403 	orl	a,r5
      00000F 4E               [12]  404 	orl	a,r6
      000010 4F               [12]  405 	orl	a,r7
      000011 60 23            [24]  406 	jz	00106$
                                    407 ;	./src/include.c:16: RL3 = 0x83; //Find  define in "Function_define.h" "TIMER VALUE"
      000013 75 C5 83         [24]  408 	mov	_rl3,#0x83
                                    409 ;	./src/include.c:17: RH3 = 0xFF;
      000016 75 C6 FF         [24]  410 	mov	_rh3,#0xff
                                    411 ;	./src/include.c:18: while (inbit(T3CON,TF3) != 1);		//Check Timer3 Time-Out Flag
      000019                        412 00101$:
      000019 74 10            [12]  413 	mov	a,#0x10
      00001B 55 C4            [12]  414 	anl	a,_t3con
      00001D C4               [12]  415 	swap	a
      00001E 54 0F            [12]  416 	anl	a,#0x0f
      000020 FB               [12]  417 	mov	r3,a
      000021 BB 01 F5         [24]  418 	cjne	r3,#0x01,00101$
                                    419 ;	./src/include.c:19: clrb(T3CON, TF3);
      000024 53 C4 EF         [24]  420 	anl	_t3con,#0xef
                                    421 ;	./src/include.c:22: __ms--;
      000027 1C               [12]  422 	dec	r4
      000028 BC FF 09         [24]  423 	cjne	r4,#0xff,00129$
      00002B 1D               [12]  424 	dec	r5
      00002C BD FF 05         [24]  425 	cjne	r5,#0xff,00129$
      00002F 1E               [12]  426 	dec	r6
      000030 BE FF 01         [24]  427 	cjne	r6,#0xff,00129$
      000033 1F               [12]  428 	dec	r7
      000034                        429 00129$:
      000034 80 D7            [24]  430 	sjmp	00104$
      000036                        431 00106$:
                                    432 ;	./src/include.c:24: clrb(T3CON, TR3);                                		//Stop Timer3
      000036 53 C4 F7         [24]  433 	anl	_t3con,#0xf7
                                    434 ;	./src/include.c:25: }
      000039 22               [24]  435 	ret
                                    436 ;------------------------------------------------------------
                                    437 ;Allocation info for local variables in function '_delay_us'
                                    438 ;------------------------------------------------------------
                                    439 ;_us                       Allocated to registers 
                                    440 ;------------------------------------------------------------
                                    441 ;	./src/include.c:27: void _delay_us(uint32_t _us)
                                    442 ;	-----------------------------------------
                                    443 ;	 function _delay_us
                                    444 ;	-----------------------------------------
      00003A                        445 __delay_us:
      00003A 85 82*00         [24]  446 	mov	__mullong_PARM_2,dpl
      00003D 85 83*01         [24]  447 	mov	(__mullong_PARM_2 + 1),dph
      000040 85 F0*02         [24]  448 	mov	(__mullong_PARM_2 + 2),b
      000043 F5*03            [12]  449 	mov	(__mullong_PARM_2 + 3),a
                                    450 ;	./src/include.c:29: _us = _us * 5 / 4+1;
      000045 90 00 05         [24]  451 	mov	dptr,#(0x05&0x00ff)
      000048 E4               [12]  452 	clr	a
      000049 F5 F0            [12]  453 	mov	b,a
      00004B 12r00r00         [24]  454 	lcall	__mullong
      00004E AC 82            [24]  455 	mov	r4,dpl
      000050 AD 83            [24]  456 	mov	r5,dph
      000052 AE F0            [24]  457 	mov	r6,b
      000054 C3               [12]  458 	clr	c
      000055 13               [12]  459 	rrc	a
      000056 FF               [12]  460 	mov	r7,a
      000057 EE               [12]  461 	mov	a,r6
      000058 13               [12]  462 	rrc	a
      000059 FE               [12]  463 	mov	r6,a
      00005A ED               [12]  464 	mov	a,r5
      00005B 13               [12]  465 	rrc	a
      00005C FD               [12]  466 	mov	r5,a
      00005D EC               [12]  467 	mov	a,r4
      00005E 13               [12]  468 	rrc	a
      00005F FC               [12]  469 	mov	r4,a
      000060 EF               [12]  470 	mov	a,r7
      000061 C3               [12]  471 	clr	c
      000062 13               [12]  472 	rrc	a
      000063 FF               [12]  473 	mov	r7,a
      000064 EE               [12]  474 	mov	a,r6
      000065 13               [12]  475 	rrc	a
      000066 FE               [12]  476 	mov	r6,a
      000067 ED               [12]  477 	mov	a,r5
      000068 13               [12]  478 	rrc	a
      000069 FD               [12]  479 	mov	r5,a
      00006A EC               [12]  480 	mov	a,r4
      00006B 13               [12]  481 	rrc	a
      00006C FC               [12]  482 	mov	r4,a
      00006D 0C               [12]  483 	inc	r4
      00006E BC 00 09         [24]  484 	cjne	r4,#0x00,00112$
      000071 0D               [12]  485 	inc	r5
      000072 BD 00 05         [24]  486 	cjne	r5,#0x00,00112$
      000075 0E               [12]  487 	inc	r6
      000076 BE 00 01         [24]  488 	cjne	r6,#0x00,00112$
      000079 0F               [12]  489 	inc	r7
      00007A                        490 00112$:
                                    491 ;	./src/include.c:30: while (--_us)
      00007A                        492 00101$:
      00007A 1C               [12]  493 	dec	r4
      00007B BC FF 09         [24]  494 	cjne	r4,#0xff,00113$
      00007E 1D               [12]  495 	dec	r5
      00007F BD FF 05         [24]  496 	cjne	r5,#0xff,00113$
      000082 1E               [12]  497 	dec	r6
      000083 BE FF 01         [24]  498 	cjne	r6,#0xff,00113$
      000086 1F               [12]  499 	dec	r7
      000087                        500 00113$:
      000087 EC               [12]  501 	mov	a,r4
      000088 4D               [12]  502 	orl	a,r5
      000089 4E               [12]  503 	orl	a,r6
      00008A 4F               [12]  504 	orl	a,r7
      00008B 70 ED            [24]  505 	jnz	00101$
                                    506 ;	./src/include.c:35: }
      00008D 22               [24]  507 	ret
                                    508 ;------------------------------------------------------------
                                    509 ;Allocation info for local variables in function 'xRamRead'
                                    510 ;------------------------------------------------------------
                                    511 ;addr                      Allocated to registers 
                                    512 ;------------------------------------------------------------
                                    513 ;	./src/include.c:37: uint8_t xRamRead(uint16_t addr)
                                    514 ;	-----------------------------------------
                                    515 ;	 function xRamRead
                                    516 ;	-----------------------------------------
      00008E                        517 _xRamRead:
                                    518 ;	./src/include.c:39: __asm__("MOVX A,@DPTR");
      00008E E0               [24]  519 	MOVX	A,@DPTR
                                    520 ;	./src/include.c:40: __asm__("MOV DPL,A");
      00008F F5 82            [12]  521 	MOV	DPL,A
                                    522 ;	./src/include.c:41: }
      000091 22               [24]  523 	ret
                                    524 ;------------------------------------------------------------
                                    525 ;Allocation info for local variables in function 'xRamWrite'
                                    526 ;------------------------------------------------------------
                                    527 ;value                     Allocated with name '_xRamWrite_PARM_2'
                                    528 ;addr                      Allocated to registers 
                                    529 ;------------------------------------------------------------
                                    530 ;	./src/include.c:43: void xRamWrite(uint16_t addr, uint8_t value)
                                    531 ;	-----------------------------------------
                                    532 ;	 function xRamWrite
                                    533 ;	-----------------------------------------
      000092                        534 _xRamWrite:
                                    535 ;	./src/include.c:45: __asm__("MOV A,_xRamWrite_PARM_2");
      000092 E5*00            [12]  536 	MOV	A,_xRamWrite_PARM_2
                                    537 ;	./src/include.c:46: __asm__("MOVX @DPTR,A");
      000094 F0               [24]  538 	MOVX	@DPTR,A
                                    539 ;	./src/include.c:47: }
      000095 22               [24]  540 	ret
                                    541 ;------------------------------------------------------------
                                    542 ;Allocation info for local variables in function 'xRamInc'
                                    543 ;------------------------------------------------------------
                                    544 ;addr                      Allocated to registers 
                                    545 ;------------------------------------------------------------
                                    546 ;	./src/include.c:49: uint8_t xRamInc(uint16_t addr)
                                    547 ;	-----------------------------------------
                                    548 ;	 function xRamInc
                                    549 ;	-----------------------------------------
      000096                        550 _xRamInc:
                                    551 ;	./src/include.c:51: __asm__("MOVX A,@DPTR");
      000096 E0               [24]  552 	MOVX	A,@DPTR
                                    553 ;	./src/include.c:52: __asm__("INC A");
      000097 04               [12]  554 	INC	A
                                    555 ;	./src/include.c:53: __asm__("MOVX @DPTR,A");
      000098 F0               [24]  556 	MOVX	@DPTR,A
                                    557 ;	./src/include.c:54: __asm__("MOV DPL,A");
      000099 F5 82            [12]  558 	MOV	DPL,A
                                    559 ;	./src/include.c:55: }
      00009B 22               [24]  560 	ret
                                    561 ;------------------------------------------------------------
                                    562 ;Allocation info for local variables in function 'xRamDec'
                                    563 ;------------------------------------------------------------
                                    564 ;addr                      Allocated to registers 
                                    565 ;------------------------------------------------------------
                                    566 ;	./src/include.c:56: uint8_t xRamDec(uint16_t addr)
                                    567 ;	-----------------------------------------
                                    568 ;	 function xRamDec
                                    569 ;	-----------------------------------------
      00009C                        570 _xRamDec:
                                    571 ;	./src/include.c:58: __asm__("MOVX A,@DPTR");
      00009C E0               [24]  572 	MOVX	A,@DPTR
                                    573 ;	./src/include.c:59: __asm__("DEC A");
      00009D 14               [12]  574 	DEC	A
                                    575 ;	./src/include.c:60: __asm__("MOVX @DPTR,A");
      00009E F0               [24]  576 	MOVX	@DPTR,A
                                    577 ;	./src/include.c:61: __asm__("MOV DPL,A");
      00009F F5 82            [12]  578 	MOV	DPL,A
                                    579 ;	./src/include.c:62: }
      0000A1 22               [24]  580 	ret
                                    581 	.area CSEG    (CODE)
                                    582 	.area CONST   (CODE)
                                    583 	.area XINIT   (CODE)
                                    584 	.area CABS    (ABS,CODE)
